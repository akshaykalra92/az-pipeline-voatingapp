# Template for CI

parameters:
  - name: file
    displayName: manifest file name
    type: string
  - name: repository
    displayName: imageRepository
    type: string
  - name: dockerfile
    displayName: dockerfile
    type: string
  - name: tag
    displayName: docker tag
    type: string
  - name: containerRegistry
    displayName: dockerRegistryServiceConnection
    type: string
  - name: artifactName
    displayName: artifact Name
    type: string

stages:
  - stage: "CI"
    displayName: "Building CI pipeline"
    jobs:
      - job: Build
        displayName: "Build and Push docker image for Azure Vote App Image"
        steps:
          - task: Docker@2
            displayName: Build and push an image to container registry
            inputs:
              command: buildAndPush
              repository: ${{ parameters.repository }}
              dockerfile: ${{ parameters.dockerfile }}
              containerRegistry: ${{ parameters.containerRegistry }}
              tags: |
                ${{ parameters.tag }}
      - job: generateString
        displayName: "generating string for manifest file"
        steps:
        dependsOn: Build
          - bash: |
              echo "##vso[task.setvariable variable=manifestName;isOutput=true]${{ parameters.file }}"
            name: stringOutput
      - job: GenerateManifest
        displayName: "generating string for manifest file"
        steps:
        dependsOn: generateString
          - task: CopyFiles@2
            inputs:
              contents: '$(Build.SourcesDirectory)/azure-vote-all-in-one-redis.yaml'
              targetFolder: "$(Build.ArtifactStagingDirectory)/$[ dependencies.generateString.outputs['stringOutput.manifestName'] ].yaml"
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: "$(Build.ArtifactStagingDirectory)/$[ dependencies.generateString.outputs['stringOutput.manifestName'] ].yaml"
              artifactName: ${{ parameters.artifactName }}
              publishLocation: 'pipeline'